<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Common="clr-namespace:AutomaticTestingSystem.Common"
                    xmlns:model="clr-namespace:AutomaticTestingSystem.Model"
                    xmlns:beh="clr-namespace:AutomaticTestingSystem.Common.CommandBehaviors"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!--<Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
        --><!--<Setter Property="beh:CommandBehavior.Event" Value="PreviewMouseRightButtonDown"/>
        <Setter Property="beh:CommandBehavior.PassEventArgs" Value="True"/>
        <Setter Property="beh:CommandBehavior.CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}, AncestorLevel=1}, 
            Path=DataContext.ContextMenu}"/>
        <Setter Property="beh:CommandBehavior.Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}, AncestorLevel=1}, 
            Path=DataContext.PreviewMouseRightButtonDown}"/>--><!--
        <Setter Property="ContextMenu" >
            <Setter.Value>
                <ContextMenu ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=1}, 
            Path=DataContext.ContextMenu}">
                    <ContextMenu.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:ContextMenuModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="2.5*"/>
                                    <ColumnDefinition Width="0.5*"/>
                                </Grid.ColumnDefinitions>
                                <Separator x:Name="Separaotr1" Grid.ColumnSpan="3" Margin="-10 4" Visibility="Collapsed"/>
                                <wpf:PackIcon x:Name="PackIcon" Kind="{Binding IconKind}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-10 0 0 0"/>
                                <TextBlock x:Name="ItemName" Text="{Binding Header}" Margin="15 0" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1"/>
                                <TextBlock x:Name="Shortcut" Text="{Binding Shortcut}"  Margin="20 0 0 0" HorizontalAlignment="Left"
                                           Grid.Column="2"/>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSeparator}" Value="True">
                                    <Setter TargetName="Separaotr1" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PackIcon" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="ItemName" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="Shortcut" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Shortcut}" Value="{x:Static sys:String.Empty }">
                                    <Setter TargetName="Shortcut" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ContextMenu.ItemTemplate>
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MaterialDesignMenuItem}">
                            <Setter Property="IsEnabled" Value="{Binding IsEnable}"/>
                            <Setter Property="beh:CommandBehavior.Event" Value="{Binding Event}"/>
                            <Setter Property="beh:CommandBehavior.Command" Value="{Binding Command}"/>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>-->
    
    
    
</ResourceDictionary>